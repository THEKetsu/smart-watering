name: 🏷️ Auto Release

on:
  push:
    branches: [ main ]
    paths:
      - 'smart-watering-backend/**'
      - 'smart-watering-frontend/**'
      - 'database/**'
      - 'docker-compose.yml'
      - 'Makefile'

jobs:
  auto-release:
    name: 🚀 Auto Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-release]')"
    
    permissions:
      contents: write
      
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Get latest tag
        id: latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest-tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG"

      - name: 📝 Analyze commits
        id: analyze
        run: |
          LATEST_TAG="${{ steps.latest-tag.outputs.latest-tag }}"
          
          # Get commits since last tag
          if [[ "$LATEST_TAG" == "v0.0.0" ]]; then
            COMMITS=$(git log --oneline --pretty=format:"%s" | head -10)
          else
            COMMITS=$(git log --oneline --pretty=format:"%s" $LATEST_TAG..HEAD)
          fi
          
          echo "Commits since $LATEST_TAG:"
          echo "$COMMITS"
          
          # Determine version bump
          BUMP="patch"
          
          if echo "$COMMITS" | grep -qE "(BREAKING|breaking|major|Major)"; then
            BUMP="major"
          elif echo "$COMMITS" | grep -qE "(feat|feature|Feature|minor|Minor)"; then
            BUMP="minor"
          fi
          
          echo "bump=$BUMP" >> $GITHUB_OUTPUT
          echo "Version bump: $BUMP"

      - name: 🔢 Calculate new version
        id: version
        run: |
          LATEST_TAG="${{ steps.latest-tag.outputs.latest-tag }}"
          BUMP="${{ steps.analyze.outputs.bump }}"
          
          # Extract version numbers
          if [[ "$LATEST_TAG" == "v0.0.0" ]]; then
            MAJOR=1
            MINOR=0
            PATCH=0
          else
            VERSION=${LATEST_TAG#v}
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          fi
          
          # Bump version
          case $BUMP in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: 🏷️ Create and push tag
        run: |
          NEW_VERSION="${{ steps.version.outputs.new-version }}"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git tag -a "$NEW_VERSION" -m "🚀 Auto-release $NEW_VERSION
          
          🤖 Generated with Claude Code
          Co-Authored-By: Claude <noreply@anthropic.com>"
          
          git push origin "$NEW_VERSION"
          
          echo "✅ Created and pushed tag: $NEW_VERSION"

      - name: 📢 Create release summary
        run: |
          NEW_VERSION="${{ steps.version.outputs.new-version }}"
          BUMP="${{ steps.analyze.outputs.bump }}"
          
          echo "🎉 Auto-release triggered!"
          echo "📈 Version: $NEW_VERSION ($BUMP bump)"
          echo "🔗 Release workflow will start automatically"